/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./entry.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./entry.js":
/*!******************!*\
  !*** ./entry.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/game */ \"./lib/game.js\");\n\n\nconst Veridis_Quo = new Audio('app/assets/audio/Daft_Punk_Veridis_Quo.mp3');\nVeridis_Quo.volume = 0.3;\nif (typeof Veridis_Quo.loop == 'boolean')\n{\n  Veridis_Quo.loop = true;\n}\nelse\n{\n  Veridis_Quo.addEventListener('ended', function() {\n        this.currentTime = 0;\n        this.play();\n    }, false);\n}\n\nconst background = new Image();\nbackground.src = \"app/assets/images/starry-sky.jpg\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  background.onload = () => { ctx.drawImage(background, 0, 0, canvas.width, canvas.height); };\n\n\n    document.getElementById('sound').addEventListener('click', (e) => {\n      if ( Veridis_Quo.muted ) {\n        _lib_game__WEBPACK_IMPORTED_MODULE_0__[\"splashAudio\"].muted = false;\n        _lib_game__WEBPACK_IMPORTED_MODULE_0__[\"deathAudio\"].muted = false;\n        _lib_game__WEBPACK_IMPORTED_MODULE_0__[\"completeAudio\"].muted = false;\n        Veridis_Quo.muted = false;\n        e.target.src = \"app/assets/images/Icons8-Windows-8-Media-Controls-Volume-Up.ico\";\n      }\n      else {\n        _lib_game__WEBPACK_IMPORTED_MODULE_0__[\"splashAudio\"].muted = true;\n        _lib_game__WEBPACK_IMPORTED_MODULE_0__[\"deathAudio\"].muted = true;\n        _lib_game__WEBPACK_IMPORTED_MODULE_0__[\"completeAudio\"].muted = true;\n        Veridis_Quo.muted = true;\n        e.target.src = \"app/assets/images/Icons8-Windows-8-Media-Controls-Mute.ico\";\n      }\n  });\n\n\n  const startGame = (e) => {\n    if (e.key === \"Enter\") {\n      document.removeEventListener('keydown', startGame);\n      Object(_lib_game__WEBPACK_IMPORTED_MODULE_0__[\"game\"])();\n      Veridis_Quo.play();\n      document.getElementById('start-button').style.display = 'none';\n      const titleCard = document.getElementById('header');\n      titleCard.style.opacity = '1';\n      fade(titleCard);\n    }\n  };\n\n  document.addEventListener('keydown', startGame);\n});\n\nconst fade = (el) => {\n  let op = 1;\n  let fader = 0.008;\n  const timer = setInterval(() => {\n      if (op <= 0.1){\n          clearInterval(timer);\n          el.style.display = 'none';\n      } else if (op <= 0.6) {\n        fader = 0.1;\n      }\n      el.style.opacity = op;\n      el.style.filter = 'alpha(opacity=' + op * 100 + \")\";\n      op -= op * fader;\n  }, 50);\n};\n\nwindow.addEventListener(\"keydown\", function(e) {\n  if([\" \", \"ArrowLeft\", \"ArrowUp\", \"ArrowRight\", \"ArrowDown\"].indexOf(e.key) > -1) {\n      e.preventDefault();\n    }\n}, false);\n\n\n//# sourceURL=webpack:///./entry.js?");

/***/ }),

/***/ "./lib/exit.js":
/*!*********************!*\
  !*** ./lib/exit.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst Rainbow = __webpack_require__(/*! rainbowvis.js */ \"./node_modules/rainbowvis.js/rainbowvis.js\");\nconst rainbowOne = new Rainbow();\nconst tinycolor = __webpack_require__(/*! tinycolor2 */ \"./node_modules/tinycolor2/tinycolor.js\");\nlet rainbowTwo = [];\n\nfor (let i = 0; i < 101; i++) {\n  let colour = tinycolor(rainbowOne.colourAt(i)).toHsv();\n  colour.s = 0.3;\n  rainbowTwo.push(tinycolor(colour).toHexString());\n}\n\nclass Exit {\n  constructor(xPos, yPos) {\n    this.xPos = xPos;\n    this.yPos = yPos;\n    this.width = 15;\n    this.height = 15;\n    this.rainbowCounter = 0;\n    this.increment = 1;\n    this.colour = rainbowTwo[this.rainbowCounter];\n    this.borderColour = rainbowTwo[Math.abs(100 - this.rainbowCounter)];\n  }\n\n  swapColour() {\n    if (this.rainbowCounter === 100) {\n      this.increment = -1;\n    } else if (this.rainbowCounter === 0) {\n      this.increment = 1;\n    }\n\n    this.rainbowCounter += this.increment;\n    this.colour = rainbowTwo[this.rainbowCounter];\n    this.borderColour = rainbowTwo[Math.abs(100 - this.rainbowCounter)];\n  }\n\n  update () {\n    this.swapColour();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Exit);\n\n//# sourceURL=webpack:///./lib/exit.js?");

/***/ }),

/***/ "./lib/game.js":
/*!*********************!*\
  !*** ./lib/game.js ***!
  \*********************/
/*! exports provided: splashAudio, deathAudio, completeAudio, game */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"splashAudio\", function() { return splashAudio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deathAudio\", function() { return deathAudio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"completeAudio\", function() { return completeAudio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"game\", function() { return game; });\n/* harmony import */ var _level_generator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./level_generator */ \"./lib/level_generator.js\");\n\n\nconst roundRect = (ctx, x, y, width, height, radius, fill, stroke) => {\n  if (typeof stroke === 'undefined') {\n    stroke = true;\n  }\n  if (typeof radius === 'undefined') {\n    radius = 5;\n  }\n  if (typeof radius === 'number') {\n    radius = {tl: radius, tr: radius, bl: radius, br: radius};\n  } else {\n    var defaultRadius = {tl: 0, tr: 0, bl: 0, br: 0};\n    for (var side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side];\n    }\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius.tl, y);\n  ctx.lineTo(x + width - radius.tr, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n  ctx.lineTo(x + width, y + height - radius.br);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n  ctx.lineTo(x + radius.bl, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n  ctx.lineTo(x, y + radius.tl);\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n  ctx.closePath();\n  if (fill) {\n    ctx.fill();\n  }\n  if (stroke) {\n    ctx.stroke();\n  }\n};\n\nconst splashAudio = new Audio('app/assets/audio/splash2.wav');\nsplashAudio.volume = 0.15;\nconst deathAudio = new Audio('app/assets/audio/deathsound.wav');\ndeathAudio.volume = 0.2;\nconst completeAudio = new Audio('app/assets/audio/levelcomplete2.wav');\ncompleteAudio.volume = 0.2;\nconst background = new Image();\nbackground.src = \"app/assets/images/starry-sky.jpg\";\n\nconst clamp = (value, min, max) => {\n  if(value < min) return min;\n  else if(value > max) return max;\n  return value;\n};\n\nlet vx = 0;\nconst platformColour = 'rgb(65, 186, 28)';\nlet levelCounter = 0;\nlet level = _level_generator__WEBPACK_IMPORTED_MODULE_0__[\"levels\"][levelCounter];\nlet player = level.player;\nlet exit = level.exit;\nlet platformArr = level.platformArr;\nlet renderArr = level.renderArr;\nlet showHelp = [false, false, false, false, false, false, false, false];\n\nconst game = () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  background.onload = () => {\n    var pattern = ctx.createPattern(background, 'repeat-x');\n    ctx.fillStyle = pattern;\n  };\n  const renderLevel = () => {\n    ctx.setTransform(1,0,0,1,0,0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    //draw background\n    ctx.drawImage(background,vx,0, canvas.width, canvas.height);\n    ctx.drawImage(background, background.width - Math.abs(vx), 0, canvas.width, canvas.height);\n    //control camera\n    if (Math.abs(vx) > background.width) {\n      vx = 0;\n    }\n    vx -= 0.1;\n    var camX = clamp(-player.xPos + canvas.width/2, 0, 2000 - canvas.width);\n    var camY = clamp(-player.yPos + canvas.height/2, 0, 2000 - canvas.height);\n    //draw text\n    ctx.translate( camX, camY );\n    ctx.font=\"20px Permanent Marker\";\n    ctx.fillStyle = \"white\";\n    renderText();\n    //draw platforms\n    ctx.fillStyle = \"rgba(29, 163, 165, 0.8)\";\n    ctx.lineWidth = 2;\n    if (player.inWater) {\n      ctx.strokeStyle = `#${exit.colour}`;\n    } else {\n      ctx.strokeStyle = 'white';\n    }\n    renderArr.forEach((platform) => {\n      roundRect(ctx, platform[0], platform[1], platform[2], platform[3], 8, platformColour, platform[4]);\n    });\n    //draw player\n    ctx.fillStyle = \"rgb(214, 12, 66)\";\n    ctx.fillRect(player.xPos, player.yPos, player.width, player.height);\n    //draw exit\n    ctx.fillStyle = `${exit.colour}`;\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = `${exit.borderColour}`;\n    roundRect(ctx, exit.xPos, exit.yPos, exit.width, exit.height, 8, exit.colour, exit.borderColour);\n  };\n\n  window.requestAnimFrame = (function(callback) {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function(callback) {\n      window.setTimeout(callback, 1000/60);\n    };\n  })();\n\n  const yCollisionCheck = () => {\n    platformArr.some((platform) => {\n      if (player.xPos+player.width > platform.xPos && player.xPos < platform.xPos + platform.width){\n        if (player.yPos + player.height >= platform.yPos && player.yPos < platform.yPos + player.height) {\n          player.yPos = platform.yPos - player.height;\n          player.isStopped = true;\n          player.ySpeed = 0;\n          return true;\n        } else if (player.yPos <= platform.yPos + platform.height && player.yPos > platform.yPos) {\n          player.yPos = platform.yPos + platform.height;\n          player.ySpeed = 0.5;\n          return true;\n        }\n        player.isStopped = false;\n      } else {\n        player.isStopped = false;\n      }\n    });\n  };\n\n  const xCollisionCheck = () => {\n    platformArr.some((platform) => {\n      if (player.yPos + player.height > platform.yPos && player.yPos < platform.yPos + platform.height){\n        if(player.xPos + player.width >= platform.xPos && player.xPos < platform.xPos + (platform.width / 2) ) {\n          player.xPos = platform.xPos - player.width - 1;\n          player.rightBlocked = true;\n        }\n        if(player.xPos <= platform.xPos + platform.width && player.xPos + player.width > platform.xPos){\n          player.xPos = platform.xPos + platform.width + 1;\n          player.leftBlocked = true;\n        }\n      }\n    });\n  };\n\n  const divingCollisionCheck = () => {\n    platformArr.some((platform) => {\n      if (player.xPos + player.width >= platform.xPos && player.xPos <= platform.xPos + platform.width ) {\n        if (player.yPos + player.height >= platform.yPos && player.yPos < platform.yPos + platform.height) {\n          splashAudio.play();\n          player.inWater = true;\n          return true;\n        }\n        player.inWater = false;\n      }\n    });\n  };\n\n  const breachingCollisionCheck = () => {\n    platformArr.some((platform) => {\n      if (player.xPos + player.width >= platform.xPos && player.xPos <= platform.xPos + platform.width ) {\n        if (player.yPos + player.height >= platform.yPos && player.yPos < platform.yPos + platform.height) {\n          player.inWater = true;\n          return true;\n        }\n      }\n      player.inWater = false;\n    });\n  };\n\n  const checkFinishLevel = () => {\n    if (player.xPos + player.width > exit.xPos && player.xPos <= exit.xPos + exit.width ) {\n      if (player.yPos + player.height >= exit.yPos && player.yPos < exit.yPos + exit.height) {\n        completeAudio.play();\n        level = _level_generator__WEBPACK_IMPORTED_MODULE_0__[\"levels\"][levelCounter += 1];\n        player = level.player;\n        exit = level.exit;\n        platformArr = level.platformArr;\n        renderArr = level.renderArr;\n        player.xSpeed = 0;\n        player.ySpeed = 0;\n        switch (levelCounter) {\n          case 1:\n            document.getElementById('sub-header').style.display = 'block';\n            break;\n          case 7:\n            window.setTimeout( () => {\n              const congrats = new Audio('app/assets/sounds/congrats.mp3');\n              congrats.volume = 0.3;\n              congrats.play();\n            }, 2000);\n            break;\n        default:\n            break;\n        }\n      }\n    }\n  };\n\n  const renderText = () => {\n    switch (levelCounter) {\n      case 0:\n        ctx.fillText(\"Use the left and right arrow keys to move.\",-140,400);\n        ctx.fillText(\"Press the up arrow key to jump.\", 170, 100);\n        break;\n      case 1:\n        if (player.xPos >= 438) {\n          window.setTimeout( () => {\n            showHelp[1] = true;\n          }, 3000);\n        }\n        if (showHelp[1] === true) {\n          ctx.fillText(\"Ooops...forgot to mention that you can dive into the water\", 325, 325);\n          ctx.fillText(\"Try holding the spacebar or 'Z' key while\", 325, 350);\n          ctx.fillText(\"in air/jumping and dive into the water!\", 325, 375);\n        }\n        break;\n      case 2:\n        if (player.xPos >= 793) {\n          window.setTimeout( () => {\n            showHelp[2] = true;\n          }, 5000);\n        }\n        if (showHelp[2] === true) {\n          ctx.fillText(\"pssst, use the 'Spacebar' key!\", 715, 375 );\n        }\n        break;\n      case 3:\n        ctx.fillText(\"Don't panic!\", -450, -1100);\n        if (player.xPos >= 910 && player.yPos <= -1000) {\n          window.setTimeout( () => {\n            showHelp[3] = true;\n          }, 3000);\n        }\n        if (showHelp[3] === true) {\n          ctx.fillText(\"It almost looked like you were\", 380, -1100);\n          ctx.fillText('flying when you raced up here', 380, -1075);\n          ctx.fillText('You got this!', 970, 450);\n        }\n        break;\n      case 5:\n        if (player.xPos >= 210 && player.xPos <= 230 && player.yPos >= 270 && player.yPos <= 300) {\n          showHelp[5] = true;\n        }\n        if (showHelp[5] === true) {\n          ctx.fillText(\"Brute force huh?\", 30, 250);\n          ctx.fillText(\"I mean that's one way\", 0, 275);\n        }\n        break;\n      case 7:\n        ctx.fillText(\"Congrats on completing the game!\", -470, 150);\n        ctx.fillText(\"Here are some random platforms to mess around with.\", -470, 175);\n        ctx.fillText(\"Thanks so much for playing!\", -470, 375);\n        default:\n        break;\n      }\n    };\n    \n    const checkBounds = () => {\n      if (player.yPos > 1200) {\n        deathAudio.play();\n        player.xPos = level.respawn[0];\n        player.yPos = 100;\n        player.ySpeed = 0;\n      }\n    };\n\n    const update = () => {\n    player.xMove();\n    if (player.inWater){\n      player.update();\n      breachingCollisionCheck();\n    } else {\n      if(!player.isDiving){\n        xCollisionCheck();\n      }\n\n      player.update();\n      exit.update();\n      if (!player.isDiving) {\n        yCollisionCheck();\n      } else {\n        divingCollisionCheck();\n      }\n    }\n    checkBounds();\n    checkFinishLevel();\n    renderLevel();\n    requestAnimFrame(() => {\n      update();\n    });\n  };\n\n  update();\n};\n\n\n//# sourceURL=webpack:///./lib/game.js?");

/***/ }),

/***/ "./lib/level.js":
/*!**********************!*\
  !*** ./lib/level.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Level {\n  constructor(player, platformArr, renderArr, exit) {\n    this.player = player;\n    this.renderArr = renderArr;\n    this.platformArr = platformArr;\n    this.exit = exit;\n    this.respawn = [player.xPos, player.yPos];\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Level);\n\n//# sourceURL=webpack:///./lib/level.js?");

/***/ }),

/***/ "./lib/level_generator.js":
/*!********************************!*\
  !*** ./lib/level_generator.js ***!
  \********************************/
/*! exports provided: levels */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"levels\", function() { return levels; });\n/* harmony import */ var _level__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./level */ \"./lib/level.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./platform */ \"./lib/platform.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player */ \"./lib/player.js\");\n/* harmony import */ var _exit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./exit */ \"./lib/exit.js\");\n\n\n\n\n\nconst levelOne = new _level__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n  new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"](50, -3500), [\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](0, 300, 900, 200),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](150, 270, 750, 200),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](300, 230, 600, 200),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](450, 190, 450, 200),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](600, 160, 300, 200)\n  ],\n  [\n    [450, 190, 340, 100, true],\n    [600, 160, 300, 100, true],\n    [300, 230, 280, 80, true],\n    [150, 270, 150, 60, true],\n    [0, 300, 150, 50, true],\n  ],\n  new _exit__WEBPACK_IMPORTED_MODULE_3__[\"default\"](815, 120)\n);\n\nconst levelTwo = new _level__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n  new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"](50, 200), [\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](695, 26, 200, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](300, 215, 280, 80),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](450, 125, 450, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](170, 260, 150, 60),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](0, 300, 150, 50)\n  ],\n  [\n    [695, 26, 200, 100, true],\n    [300, 215, 280, 80, true],\n    [450, 125, 450, 100, true],\n    [170, 260, 150, 60, true],\n    [0, 300, 150, 50, true]\n  ],\n  new _exit__WEBPACK_IMPORTED_MODULE_3__[\"default\"](815, 0)\n);\n\nconst levelThree = new _level__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n  new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"](50,  0), [\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](0, 300, 120, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](150, 270, 120, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](300, 230, 120, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](500, 300, 120, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](725, 500, 160, 100)\n  ],\n  [\n    [0, 300, 120, 100, true],\n    [150, 270, 120, 100, true],\n    [300, 230, 120, 100, true],\n    [500, 300, 120, 100, true],\n    [725, 500, 160, 100, true]\n  ],\n  new _exit__WEBPACK_IMPORTED_MODULE_3__[\"default\"](793, 525)\n);\n\nconst levelFour = new _level__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n  new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"](50, -3000), [\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](0, 300, 100, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](185, 275, 100, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](390, 230, 100, 250),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](600, 190, 100, 250),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](910, -1000, 50, 1500),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](840, 465, 100, 50),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](650, -1275, 80, 50)\n  ],\n  [\n    [0, 300, 100, 100, true],\n    [185, 275, 100, 100, true],\n    [390, 230, 100, 250, true],\n    [600, 190, 100, 250, true],\n    [910, -1000, 50, 1500, true],\n    [840, 465, 100, 50, true],\n    [650, -1275, 80, 50, true]\n  ],\n  new _exit__WEBPACK_IMPORTED_MODULE_3__[\"default\"](600, -1325)\n);\n\nconst levelFive = new _level__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n  new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"](825, 0), [\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](725, 500, 150, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](600, 460, 100, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](500, 305, 120, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](225, 230, 280, 30),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](250, 150, 236, 30),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](275, 70, 188, 30),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](300, -10, 140, 30),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](325, -90, 96, 30),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]( 350, -170, 50, 30)\n  ],\n  [\n    [725, 500, 150, 100, true],\n    [600, 460, 100, 100, true],\n    [500, 305, 120, 100, true],\n    [225, 230, 280, 30, true],\n    [250, 150, 236, 30, true],\n    [275, 70, 188, 30, true],\n    [300, -10, 140, 30, true],\n    [325, -90, 96, 30, true],\n    [350, -170, 50, 30, true]\n  ],\n  new _exit__WEBPACK_IMPORTED_MODULE_3__[\"default\"](365, -262)\n);\n\nconst levelSix = new _level__WEBPACK_IMPORTED_MODULE_0__[\"default\"] (\n  new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"](825, 0), [\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](725, 500, 150, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](600, 460, 100, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-100, -100, 500, 400),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](400, 175, 175, 275),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-50, 465, 375, 15),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-275, 175, 175, 275)\n  ],\n  [\n    [725, 500, 150, 100, true],\n    [600, 460, 100, 100, true],\n    [-100, -100, 500, 400, true],\n    [400, 175, 175, 275, true],\n    [-50, 465, 325, 15, true],\n    [-275, 175, 175, 275, true]\n    ],\n  new _exit__WEBPACK_IMPORTED_MODULE_3__[\"default\"](200, 400)\n);\n\nconst levelSeven = new _level__WEBPACK_IMPORTED_MODULE_0__[\"default\"] (\n  new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"](495, -900), [\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](450, 590, 100, 10),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](370, 275, 50, 275),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](650, 50, 50, 350),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](370, -300, 50, 280),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](650, -600, 50, 320),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](370, -900, 50, 280),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](455, -950, 100, 20),\n  ],\n  [\n    [450, 590, 100, 10, true],\n    [370, 275, 50, 275, true],\n    [650, 50, 50, 350, true],\n    [370, -300, 50, 280, true],\n    [650, -600, 50, 280, true],\n    [370, -900, 50, 280, true],\n    [455, -950, 100, 20, true]\n  ],\n  new _exit__WEBPACK_IMPORTED_MODULE_3__[\"default\"](495, -1000)\n);\n\nconst finalLevel = new _level__WEBPACK_IMPORTED_MODULE_0__[\"default\"] (\n  new _player__WEBPACK_IMPORTED_MODULE_2__[\"default\"](50, 200), [\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](725, 500, 150, 100),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](0, 400, 400, 20),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](300, 200, 100, 50),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](300, 350, 100, 50),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](200, 0, 700, 20),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](150, 470, 420, 200),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](1100, 10, 50, 500),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](550, 200, 200, 200),\n    new _platform__WEBPACK_IMPORTED_MODULE_1__[\"default\"](200, -400, 700, 20),\n  ],\n  [\n    [725, 500, 150, 100, true],\n    [0, 400, 400, 20, true],\n    [300, 200, 100, 50, true],\n    [300, 350, 100, 50, true],\n    [200, 0, 700, 20, true],\n    [150, 470, 420, 200, true],\n    [1100, 10, 50, 500, true],\n    [550, 200, 200, 200, true],\n    [200, -400, 700, 20, true]\n  ],\n  new _exit__WEBPACK_IMPORTED_MODULE_3__[\"default\"](-4000, -3000)\n);\nconst levels = [levelOne, levelTwo, levelThree, levelFour, levelFive, levelSix, levelSeven, finalLevel];\n\n\n//# sourceURL=webpack:///./lib/level_generator.js?");

/***/ }),

/***/ "./lib/platform.js":
/*!*************************!*\
  !*** ./lib/platform.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Platform {\n  constructor(xPos, yPos, width, height) {\n    this.xPos = xPos;\n    this.yPos = yPos;\n    this.width = width;\n    this.height = height;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Platform);\n\n//# sourceURL=webpack:///./lib/platform.js?");

/***/ }),

/***/ "./lib/player.js":
/*!***********************!*\
  !*** ./lib/player.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Player {\n  constructor(xPos, yPos) {\n    this.xPos = xPos;\n    this.yPos = yPos;\n    // this.colour = \"rgb(111, 111, 112)\";\n    // this.tailColour = \"rgb(86, 41, 19)\";\n    this.width = 11;\n    this.height = 11;\n    this.isStopped = true;\n    this.rightBlocked = false;\n    this.leftBlocked = false;\n    this.maxSpeed = 5;\n    this.moveSpeed = 0.8;\n    this.xSpeed = 0;\n    this.ySpeed = 0;\n    this.terminalVelocity = 20;\n    this.rightPressed = false;\n    this.leftPressed = false;\n    this.upPressed = false;\n    this.enteringWater = false;\n    this.isDiving = false;\n    this.inWater = false;\n\n    this.jump = this.jump.bind(this);\n\n    document.addEventListener('keyup', this.handleKeyUp.bind(this), false);\n    document.addEventListener('keydown', this.handleKeyDown.bind(this), false);\n  }\n\n  jump () {\n    if (this.isStopped) {\n      this.ySpeed = -7;\n      this.isStopped = false;\n    }\n  }\n\n  fall () {\n    if (this.ySpeed < this.terminalVelocity) {\n      this.ySpeed += 0.4;\n    }\n    this.yPos += this.ySpeed;\n  }\n\n  float () {\n    if (this.ySpeed > -1 * this.terminalVelocity) {\n      this.ySpeed -= 0.7;\n    }\n    this.yPos += this.ySpeed;\n  }\n\n  update () {\n    if (this.inWater) {\n      // this.colour = \"rgb(86, 41, 19)\";\n      // this.tailColour = \"rgb(111, 111, 112)\";\n      this.float();\n    } else if (!this.isStopped) {\n      // this.tailColour = \"rgb(111, 111, 112)\";\n      // this.colour = \"rgb(86, 41, 19)\";\n      this.fall();\n    }\n  }\n\n  handleKeyDown (e) {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        this.leftPressed = true;\n        break;\n      case \"ArrowUp\":\n        this.jump();\n        break;\n      case \"ArrowRight\":\n        this.rightPressed = true;\n        break;\n      case \" \":\n        if (!this.isStopped) {\n          this.isDiving = true;\n        }\n        break;\n    }\n  }\n\n  handleKeyUp (e) {\n    switch (e.key) {\n      case \"ArrowLeft\":\n        this.leftPressed = false;\n        break;\n      case \"ArrowRight\":\n        this.rightPressed = false;\n        break;\n      case \" \":\n        this.isDiving = false;\n        break;\n    }\n  }\n\n  xMove () {\n    this.xSpeed = this.xSpeed * 0.9;\n\n    if ((this.rightBlocked && this.xSpeed > 0) || (this.leftBlocked && this.xSpeed < 0)) {\n      this.xSpeed = 0;\n    }\n\n    if (this.rightPressed && this.xSpeed < this.maxSpeed && !this.rightBlocked) {\n      this.xSpeed += this.moveSpeed;\n    }\n\n    if (this.leftPressed && this.xSpeed > this.maxSpeed * -1 && !this.leftBlocked) {\n      this.xSpeed -= this.moveSpeed;\n    }\n\n    this.rightBlocked = false;\n    this.leftBlocked = false;\n    this.xPos += this.xSpeed;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);\n\n\n//# sourceURL=webpack:///./lib/player.js?");

/***/ }),

/***/ "./node_modules/rainbowvis.js/rainbowvis.js":
/*!**************************************************!*\
  !*** ./node_modules/rainbowvis.js/rainbowvis.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\nRainbowVis-JS \nReleased under Eclipse Public License - v 1.0\n*/\n\nfunction Rainbow()\n{\n\t\"use strict\";\n\tvar gradients = null;\n\tvar minNum = 0;\n\tvar maxNum = 100;\n\tvar colours = ['ff0000', 'ffff00', '00ff00', '0000ff']; \n\tsetColours(colours);\n\t\n\tfunction setColours (spectrum) \n\t{\n\t\tif (spectrum.length < 2) {\n\t\t\tthrow new Error('Rainbow must have two or more colours.');\n\t\t} else {\n\t\t\tvar increment = (maxNum - minNum)/(spectrum.length - 1);\n\t\t\tvar firstGradient = new ColourGradient();\n\t\t\tfirstGradient.setGradient(spectrum[0], spectrum[1]);\n\t\t\tfirstGradient.setNumberRange(minNum, minNum + increment);\n\t\t\tgradients = [ firstGradient ];\n\t\t\t\n\t\t\tfor (var i = 1; i < spectrum.length - 1; i++) {\n\t\t\t\tvar colourGradient = new ColourGradient();\n\t\t\t\tcolourGradient.setGradient(spectrum[i], spectrum[i + 1]);\n\t\t\t\tcolourGradient.setNumberRange(minNum + increment * i, minNum + increment * (i + 1)); \n\t\t\t\tgradients[i] = colourGradient; \n\t\t\t}\n\n\t\t\tcolours = spectrum;\n\t\t}\n\t}\n\n\tthis.setSpectrum = function () \n\t{\n\t\tsetColours(arguments);\n\t\treturn this;\n\t}\n\n\tthis.setSpectrumByArray = function (array)\n\t{\n\t\tsetColours(array);\n\t\treturn this;\n\t}\n\n\tthis.colourAt = function (number)\n\t{\n\t\tif (isNaN(number)) {\n\t\t\tthrow new TypeError(number + ' is not a number');\n\t\t} else if (gradients.length === 1) {\n\t\t\treturn gradients[0].colourAt(number);\n\t\t} else {\n\t\t\tvar segment = (maxNum - minNum)/(gradients.length);\n\t\t\tvar index = Math.min(Math.floor((Math.max(number, minNum) - minNum)/segment), gradients.length - 1);\n\t\t\treturn gradients[index].colourAt(number);\n\t\t}\n\t}\n\n\tthis.colorAt = this.colourAt;\n\n\tthis.setNumberRange = function (minNumber, maxNumber)\n\t{\n\t\tif (maxNumber > minNumber) {\n\t\t\tminNum = minNumber;\n\t\t\tmaxNum = maxNumber;\n\t\t\tsetColours(colours);\n\t\t} else {\n\t\t\tthrow new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n\t\t}\n\t\treturn this;\n\t}\n}\n\nfunction ColourGradient() \n{\n\t\"use strict\";\n\tvar startColour = 'ff0000';\n\tvar endColour = '0000ff';\n\tvar minNum = 0;\n\tvar maxNum = 100;\n\n\tthis.setGradient = function (colourStart, colourEnd)\n\t{\n\t\tstartColour = getHexColour(colourStart);\n\t\tendColour = getHexColour(colourEnd);\n\t}\n\n\tthis.setNumberRange = function (minNumber, maxNumber)\n\t{\n\t\tif (maxNumber > minNumber) {\n\t\t\tminNum = minNumber;\n\t\t\tmaxNum = maxNumber;\n\t\t} else {\n\t\t\tthrow new RangeError('maxNumber (' + maxNumber + ') is not greater than minNumber (' + minNumber + ')');\n\t\t}\n\t}\n\n\tthis.colourAt = function (number)\n\t{\n\t\treturn calcHex(number, startColour.substring(0,2), endColour.substring(0,2)) \n\t\t\t+ calcHex(number, startColour.substring(2,4), endColour.substring(2,4)) \n\t\t\t+ calcHex(number, startColour.substring(4,6), endColour.substring(4,6));\n\t}\n\t\n\tfunction calcHex(number, channelStart_Base16, channelEnd_Base16)\n\t{\n\t\tvar num = number;\n\t\tif (num < minNum) {\n\t\t\tnum = minNum;\n\t\t}\n\t\tif (num > maxNum) {\n\t\t\tnum = maxNum;\n\t\t} \n\t\tvar numRange = maxNum - minNum;\n\t\tvar cStart_Base10 = parseInt(channelStart_Base16, 16);\n\t\tvar cEnd_Base10 = parseInt(channelEnd_Base16, 16); \n\t\tvar cPerUnit = (cEnd_Base10 - cStart_Base10)/numRange;\n\t\tvar c_Base10 = Math.round(cPerUnit * (num - minNum) + cStart_Base10);\n\t\treturn formatHex(c_Base10.toString(16));\n\t}\n\n\tfunction formatHex(hex) \n\t{\n\t\tif (hex.length === 1) {\n\t\t\treturn '0' + hex;\n\t\t} else {\n\t\t\treturn hex;\n\t\t}\n\t} \n\t\n\tfunction isHexColour(string)\n\t{\n\t\tvar regex = /^#?[0-9a-fA-F]{6}$/i;\n\t\treturn regex.test(string);\n\t}\n\n\tfunction getHexColour(string)\n\t{\n\t\tif (isHexColour(string)) {\n\t\t\treturn string.substring(string.length - 6, string.length);\n\t\t} else {\n\t\t\tvar name = string.toLowerCase();\n\t\t\tif (colourNames.hasOwnProperty(name)) {\n\t\t\t\treturn colourNames[name];\n\t\t\t}\n\t\t\tthrow new Error(string + ' is not a valid colour.');\n\t\t}\n\t}\n\t\n\t// Extended list of CSS colornames s taken from\n\t// http://www.w3.org/TR/css3-color/#svg-color\n\tvar colourNames = {\n\t\taliceblue: \"F0F8FF\",\n\t\tantiquewhite: \"FAEBD7\",\n\t\taqua: \"00FFFF\",\n\t\taquamarine: \"7FFFD4\",\n\t\tazure: \"F0FFFF\",\n\t\tbeige: \"F5F5DC\",\n\t\tbisque: \"FFE4C4\",\n\t\tblack: \"000000\",\n\t\tblanchedalmond: \"FFEBCD\",\n\t\tblue: \"0000FF\",\n\t\tblueviolet: \"8A2BE2\",\n\t\tbrown: \"A52A2A\",\n\t\tburlywood: \"DEB887\",\n\t\tcadetblue: \"5F9EA0\",\n\t\tchartreuse: \"7FFF00\",\n\t\tchocolate: \"D2691E\",\n\t\tcoral: \"FF7F50\",\n\t\tcornflowerblue: \"6495ED\",\n\t\tcornsilk: \"FFF8DC\",\n\t\tcrimson: \"DC143C\",\n\t\tcyan: \"00FFFF\",\n\t\tdarkblue: \"00008B\",\n\t\tdarkcyan: \"008B8B\",\n\t\tdarkgoldenrod: \"B8860B\",\n\t\tdarkgray: \"A9A9A9\",\n\t\tdarkgreen: \"006400\",\n\t\tdarkgrey: \"A9A9A9\",\n\t\tdarkkhaki: \"BDB76B\",\n\t\tdarkmagenta: \"8B008B\",\n\t\tdarkolivegreen: \"556B2F\",\n\t\tdarkorange: \"FF8C00\",\n\t\tdarkorchid: \"9932CC\",\n\t\tdarkred: \"8B0000\",\n\t\tdarksalmon: \"E9967A\",\n\t\tdarkseagreen: \"8FBC8F\",\n\t\tdarkslateblue: \"483D8B\",\n\t\tdarkslategray: \"2F4F4F\",\n\t\tdarkslategrey: \"2F4F4F\",\n\t\tdarkturquoise: \"00CED1\",\n\t\tdarkviolet: \"9400D3\",\n\t\tdeeppink: \"FF1493\",\n\t\tdeepskyblue: \"00BFFF\",\n\t\tdimgray: \"696969\",\n\t\tdimgrey: \"696969\",\n\t\tdodgerblue: \"1E90FF\",\n\t\tfirebrick: \"B22222\",\n\t\tfloralwhite: \"FFFAF0\",\n\t\tforestgreen: \"228B22\",\n\t\tfuchsia: \"FF00FF\",\n\t\tgainsboro: \"DCDCDC\",\n\t\tghostwhite: \"F8F8FF\",\n\t\tgold: \"FFD700\",\n\t\tgoldenrod: \"DAA520\",\n\t\tgray: \"808080\",\n\t\tgreen: \"008000\",\n\t\tgreenyellow: \"ADFF2F\",\n\t\tgrey: \"808080\",\n\t\thoneydew: \"F0FFF0\",\n\t\thotpink: \"FF69B4\",\n\t\tindianred: \"CD5C5C\",\n\t\tindigo: \"4B0082\",\n\t\tivory: \"FFFFF0\",\n\t\tkhaki: \"F0E68C\",\n\t\tlavender: \"E6E6FA\",\n\t\tlavenderblush: \"FFF0F5\",\n\t\tlawngreen: \"7CFC00\",\n\t\tlemonchiffon: \"FFFACD\",\n\t\tlightblue: \"ADD8E6\",\n\t\tlightcoral: \"F08080\",\n\t\tlightcyan: \"E0FFFF\",\n\t\tlightgoldenrodyellow: \"FAFAD2\",\n\t\tlightgray: \"D3D3D3\",\n\t\tlightgreen: \"90EE90\",\n\t\tlightgrey: \"D3D3D3\",\n\t\tlightpink: \"FFB6C1\",\n\t\tlightsalmon: \"FFA07A\",\n\t\tlightseagreen: \"20B2AA\",\n\t\tlightskyblue: \"87CEFA\",\n\t\tlightslategray: \"778899\",\n\t\tlightslategrey: \"778899\",\n\t\tlightsteelblue: \"B0C4DE\",\n\t\tlightyellow: \"FFFFE0\",\n\t\tlime: \"00FF00\",\n\t\tlimegreen: \"32CD32\",\n\t\tlinen: \"FAF0E6\",\n\t\tmagenta: \"FF00FF\",\n\t\tmaroon: \"800000\",\n\t\tmediumaquamarine: \"66CDAA\",\n\t\tmediumblue: \"0000CD\",\n\t\tmediumorchid: \"BA55D3\",\n\t\tmediumpurple: \"9370DB\",\n\t\tmediumseagreen: \"3CB371\",\n\t\tmediumslateblue: \"7B68EE\",\n\t\tmediumspringgreen: \"00FA9A\",\n\t\tmediumturquoise: \"48D1CC\",\n\t\tmediumvioletred: \"C71585\",\n\t\tmidnightblue: \"191970\",\n\t\tmintcream: \"F5FFFA\",\n\t\tmistyrose: \"FFE4E1\",\n\t\tmoccasin: \"FFE4B5\",\n\t\tnavajowhite: \"FFDEAD\",\n\t\tnavy: \"000080\",\n\t\toldlace: \"FDF5E6\",\n\t\tolive: \"808000\",\n\t\tolivedrab: \"6B8E23\",\n\t\torange: \"FFA500\",\n\t\torangered: \"FF4500\",\n\t\torchid: \"DA70D6\",\n\t\tpalegoldenrod: \"EEE8AA\",\n\t\tpalegreen: \"98FB98\",\n\t\tpaleturquoise: \"AFEEEE\",\n\t\tpalevioletred: \"DB7093\",\n\t\tpapayawhip: \"FFEFD5\",\n\t\tpeachpuff: \"FFDAB9\",\n\t\tperu: \"CD853F\",\n\t\tpink: \"FFC0CB\",\n\t\tplum: \"DDA0DD\",\n\t\tpowderblue: \"B0E0E6\",\n\t\tpurple: \"800080\",\n\t\tred: \"FF0000\",\n\t\trosybrown: \"BC8F8F\",\n\t\troyalblue: \"4169E1\",\n\t\tsaddlebrown: \"8B4513\",\n\t\tsalmon: \"FA8072\",\n\t\tsandybrown: \"F4A460\",\n\t\tseagreen: \"2E8B57\",\n\t\tseashell: \"FFF5EE\",\n\t\tsienna: \"A0522D\",\n\t\tsilver: \"C0C0C0\",\n\t\tskyblue: \"87CEEB\",\n\t\tslateblue: \"6A5ACD\",\n\t\tslategray: \"708090\",\n\t\tslategrey: \"708090\",\n\t\tsnow: \"FFFAFA\",\n\t\tspringgreen: \"00FF7F\",\n\t\tsteelblue: \"4682B4\",\n\t\ttan: \"D2B48C\",\n\t\tteal: \"008080\",\n\t\tthistle: \"D8BFD8\",\n\t\ttomato: \"FF6347\",\n\t\tturquoise: \"40E0D0\",\n\t\tviolet: \"EE82EE\",\n\t\twheat: \"F5DEB3\",\n\t\twhite: \"FFFFFF\",\n\t\twhitesmoke: \"F5F5F5\",\n\t\tyellow: \"FFFF00\",\n\t\tyellowgreen: \"9ACD32\"\n\t}\n}\n\nif (true) {\n  module.exports = Rainbow;\n}\n\n\n//# sourceURL=webpack:///./node_modules/rainbowvis.js/rainbowvis.js?");

/***/ }),

/***/ "./node_modules/tinycolor2/tinycolor.js":
/*!**********************************************!*\
  !*** ./node_modules/tinycolor2/tinycolor.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif ( true && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {return tinycolor;}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n// Browser: Expose to window\nelse {}\n\n})(Math);\n\n\n//# sourceURL=webpack:///./node_modules/tinycolor2/tinycolor.js?");

/***/ })

/******/ });